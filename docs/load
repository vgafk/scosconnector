
# def get_data_from_scos(data_type: str, unit_id: str = ''):
#     page = 0
#     last_page = 1
#     results = []
#     while page < last_page:
#         url = endpoint_urls[data_type]
#         if unit_id:
#             url = url.replace('%unit_id', unit_id)
#         resp_json = requests.get(url, headers=headers).json()
#         try:
#             results.extend(resp_json['results'])
#             page = resp_json['page']
#             last_page = resp_json['last_page']`
#         except Exception as error:
#             print(error)
#             break
#     return results
#
#
# def get_all_data_from_scos():
#     all_data = get_scos_units_list('educational_programs')
#     study_plans = get_scos_units_list('study_plans')
#     all_data.extend(study_plans)
#     all_data.extend(get_scos_units_list('disciplines'))
#     students, study_plan_students = get_scos_units_list('students')     # TODO сделать по отдельности
#     all_data.extend(students)
#     all_data.extend(study_plan_students)
#     all_data.extend(get_scos_units_list('marks'))
#     for study_plan in study_plans:
#         all_data.extend(get_scos_units_list('study_plan_disciplines', study_plan.id))
#     for student in students:
#         all_data.extend(get_scos_units_list('contingent_flows', student.id))
#     return all_data
#
#
# def get_scos_units_list(unit_type: str, unit_id: str = ''):
#     unit_data_from_scos = get_data_from_scos(unit_type, unit_id)
#     unit_list = data_classes[unit_type].list_from_json(unit_data_from_scos, unit_id=unit_id)
#     return unit_list
#
#
# def get_study_plans_disciplines_from_scos(study_plan: str):
#     study_plans_disciplines_from_scos = get_data_from_scos('study_plans', study_plan, 'disciplines')
#     study_plans_disciplines_list = data_classes['study_plan_disciplines'].get_list(study_plan,
#                                                                                    study_plans_disciplines_from_scos)
#     for study_plan_disciplines in study_plans_disciplines_list:
#         local_base.insert(study_plan_disciplines)
#
#
# def get_students_from_scos():
#     students_from_scos = get_data_from_scos('students')
#     students_list, study_plans_list = data_classes['students'].list_from_json(students_from_scos)
#     for student in students_list:
#         local_base.insert(student)
#         get_contingent_flows_from_scos(student.scos_id)
#     for study_plans in study_plans_list:
#         local_base.insert(study_plans)
#
#
# def get_contingent_flows_from_scos(student: str):
#     contingent_flows_from_scos = get_data_from_scos('students', student, 'contingent_flows')
#     contingent_flows_list = data_classes['contingent_flows'].get_list(student, contingent_flows_from_scos)
#     for contingent_flows in contingent_flows_list:
#         local_base.insert(contingent_flows)
#
#
# def get_marks_from_scos():
#     marks_from_scos = get_data_from_scos('marks')
#     marks_list = data_classes['marks'].list_from_json(marks_from_scos)
#     for marks in marks_list:
#         local_base.insert(marks)
#
#
